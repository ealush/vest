{
  "compilerOptions": {
    "allowJs": false,
    "baseUrl": ".",
    "declaration": true,
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "importHelpers": true,
    "lib": ["esnext"],
    "module": "esnext",
    "moduleResolution": "node",
    "noEmit": true,
    "noFallthroughCasesInSwitch": true,
    "noImplicitAny": true,
    "noImplicitReturns": false,
    "noImplicitThis": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "rootDir": ".",
    "skipLibCheck": true,
    "sourceMap": true,
    "strict": true,
    "paths": {
      "anyone": ["./packages/anyone/src/anyone.ts"],
      "all": ["./packages/anyone/src/exports/all.ts"],
      "any": ["./packages/anyone/src/exports/any.ts"],
      "none": ["./packages/anyone/src/exports/none.ts"],
      "one": ["./packages/anyone/src/exports/one.ts"],
      "runAnyoneMethods": ["./packages/anyone/src/runner/runAnyoneMethods.ts"],
      "context": ["./packages/context/src/context.ts"],
      "compose": ["./packages/n4s/src/exports/compose.ts"],
      "compounds": ["./packages/n4s/src/exports/compounds.ts"],
      "schema": ["./packages/n4s/src/exports/schema.ts"],
      "eachEnforceRule": ["./packages/n4s/src/lib/eachEnforceRule.ts"],
      "isProxySupported": ["./packages/n4s/src/lib/isProxySupported.ts"],
      "ruleReturn": ["./packages/n4s/src/lib/ruleReturn.ts"],
      "runLazyRule": ["./packages/n4s/src/lib/runLazyRule.ts"],
      "transformResult": ["./packages/n4s/src/lib/transformResult.ts"],
      "n4s": ["./packages/n4s/src/n4s.ts"],
      "allOf": ["./packages/n4s/src/plugins/compounds/allOf.ts"],
      "anyOf": ["./packages/n4s/src/plugins/compounds/anyOf.ts"],
      "noneOf": ["./packages/n4s/src/plugins/compounds/noneOf.ts"],
      "oneOf": ["./packages/n4s/src/plugins/compounds/oneOf.ts"],
      "isArrayOf": ["./packages/n4s/src/plugins/schema/isArrayOf.ts"],
      "loose": ["./packages/n4s/src/plugins/schema/loose.ts"],
      "optional": ["./packages/n4s/src/plugins/schema/optional.ts"],
      "partial": ["./packages/n4s/src/plugins/schema/partial.ts"],
      "schemaTypes": ["./packages/n4s/src/plugins/schema/schemaTypes.ts"],
      "shape": ["./packages/n4s/src/plugins/schema/shape.ts"],
      "endsWith": ["./packages/n4s/src/rules/endsWith.ts"],
      "equals": ["./packages/n4s/src/rules/equals.ts"],
      "greaterThanOrEquals": [
        "./packages/n4s/src/rules/greaterThanOrEquals.ts"
      ],
      "inside": ["./packages/n4s/src/rules/inside.ts"],
      "isBetween": ["./packages/n4s/src/rules/isBetween.ts"],
      "isBlank": ["./packages/n4s/src/rules/isBlank.ts"],
      "isBoolean": ["./packages/n4s/src/rules/isBoolean.ts"],
      "isEven": ["./packages/n4s/src/rules/isEven.ts"],
      "isKeyOf": ["./packages/n4s/src/rules/isKeyOf.ts"],
      "isNaN": ["./packages/n4s/src/rules/isNaN.ts"],
      "isNegative": ["./packages/n4s/src/rules/isNegative.ts"],
      "isNumber": ["./packages/n4s/src/rules/isNumber.ts"],
      "isOdd": ["./packages/n4s/src/rules/isOdd.ts"],
      "isString": ["./packages/n4s/src/rules/isString.ts"],
      "isTruthy": ["./packages/n4s/src/rules/isTruthy.ts"],
      "isValueOf": ["./packages/n4s/src/rules/isValueOf.ts"],
      "lessThan": ["./packages/n4s/src/rules/lessThan.ts"],
      "lessThanOrEquals": ["./packages/n4s/src/rules/lessThanOrEquals.ts"],
      "longerThanOrEquals": ["./packages/n4s/src/rules/longerThanOrEquals.ts"],
      "matches": ["./packages/n4s/src/rules/matches.ts"],
      "ruleCondition": ["./packages/n4s/src/rules/ruleCondition.ts"],
      "shorterThan": ["./packages/n4s/src/rules/shorterThan.ts"],
      "shorterThanOrEquals": [
        "./packages/n4s/src/rules/shorterThanOrEquals.ts"
      ],
      "startsWith": ["./packages/n4s/src/rules/startsWith.ts"],
      "enforce": ["./packages/n4s/src/runtime/enforce.ts"],
      "enforceContext": ["./packages/n4s/src/runtime/enforceContext.ts"],
      "enforceEager": ["./packages/n4s/src/runtime/enforceEager.ts"],
      "genEnforceLazy": ["./packages/n4s/src/runtime/genEnforceLazy.ts"],
      "rules": ["./packages/n4s/src/runtime/rules.ts"],
      "runtimeRules": ["./packages/n4s/src/runtime/runtimeRules.ts"],
      "vast": ["./packages/vast/src/vast.ts"],
      "asArray": ["./packages/vest-utils/src/asArray.ts"],
      "assign": ["./packages/vest-utils/src/assign.ts"],
      "bindNot": ["./packages/vest-utils/src/bindNot.ts"],
      "bus": ["./packages/vest-utils/src/bus.ts"],
      "cache": ["./packages/vest-utils/src/cache.ts"],
      "callEach": ["./packages/vest-utils/src/callEach.ts"],
      "defaultTo": ["./packages/vest-utils/src/defaultTo.ts"],
      "deferThrow": ["./packages/vest-utils/src/deferThrow.ts"],
      "either": ["./packages/vest-utils/src/either.ts"],
      "globals.d": ["./packages/vest-utils/src/globals.d.ts"],
      "greaterThan": ["./packages/vest-utils/src/greaterThan.ts"],
      "hasOwnProperty": ["./packages/vest-utils/src/hasOwnProperty.ts"],
      "invariant": ["./packages/vest-utils/src/invariant.ts"],
      "isArrayValue": ["./packages/vest-utils/src/isArrayValue.ts"],
      "isBooleanValue": ["./packages/vest-utils/src/isBooleanValue.ts"],
      "isEmpty": ["./packages/vest-utils/src/isEmpty.ts"],
      "isFunction": ["./packages/vest-utils/src/isFunction.ts"],
      "isNull": ["./packages/vest-utils/src/isNull.ts"],
      "isNullish": ["./packages/vest-utils/src/isNullish.ts"],
      "isNumeric": ["./packages/vest-utils/src/isNumeric.ts"],
      "isPositive": ["./packages/vest-utils/src/isPositive.ts"],
      "isPromise": ["./packages/vest-utils/src/isPromise.ts"],
      "isStringValue": ["./packages/vest-utils/src/isStringValue.ts"],
      "isUndefined": ["./packages/vest-utils/src/isUndefined.ts"],
      "last": ["./packages/vest-utils/src/last.ts"],
      "lengthEquals": ["./packages/vest-utils/src/lengthEquals.ts"],
      "longerThan": ["./packages/vest-utils/src/longerThan.ts"],
      "mapFirst": ["./packages/vest-utils/src/mapFirst.ts"],
      "nestedArray": ["./packages/vest-utils/src/nestedArray.ts"],
      "numberEquals": ["./packages/vest-utils/src/numberEquals.ts"],
      "optionalFunctionValue": [
        "./packages/vest-utils/src/optionalFunctionValue.ts"
      ],
      "seq": ["./packages/vest-utils/src/seq.ts"],
      "utilityTypes": ["./packages/vest-utils/src/utilityTypes.ts"],
      "vest-utils": ["./packages/vest-utils/src/vest-utils.ts"],
      "ctx": ["./packages/vest/src/core/ctx/ctx.ts"],
      "generateIsolate": [
        "./packages/vest/src/core/isolate/generateIsolate.ts"
      ],
      "isolate": ["./packages/vest/src/core/isolate/isolate.ts"],
      "isolateCursor": ["./packages/vest/src/core/isolate/isolateCursor.ts"],
      "isolateHooks": ["./packages/vest/src/core/isolate/isolateHooks.ts"],
      "each": ["./packages/vest/src/core/isolate/isolates/each.ts"],
      "group": ["./packages/vest/src/core/isolate/isolates/group.ts"],
      "omitWhen": ["./packages/vest/src/core/isolate/isolates/omitWhen.ts"],
      "skipWhen": ["./packages/vest/src/core/isolate/isolates/skipWhen.ts"],
      "IsolateTypes": ["./packages/vest/src/core/isolate/IsolateTypes.ts"],
      "createStateRef": ["./packages/vest/src/core/state/createStateRef.ts"],
      "stateHooks": ["./packages/vest/src/core/state/stateHooks.ts"],
      "create": ["./packages/vest/src/core/suite/create.ts"],
      "hasRemainingTests": [
        "./packages/vest/src/core/suite/hasRemainingTests.ts"
      ],
      "produceSuiteResult": [
        "./packages/vest/src/core/suite/produce/produceSuiteResult.ts"
      ],
      "produceSuiteRunResult": [
        "./packages/vest/src/core/suite/produce/produceSuiteRunResult.ts"
      ],
      "runCallbacks": [
        "./packages/vest/src/core/suite/produce/runCallbacks.ts"
      ],
      "Severity": ["./packages/vest/src/core/suite/produce/Severity.ts"],
      "genTestsSummary": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/genTestsSummary.ts"
      ],
      "hasFailuresByTestObjects": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/hasFailuresByTestObjects.ts"
      ],
      "matchingFieldName": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/helpers/matchingFieldName.ts"
      ],
      "matchingGroupName": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/helpers/matchingGroupName.ts"
      ],
      "nonMatchingSeverityProfile": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/helpers/nonMatchingSeverityProfile.ts"
      ],
      "shouldAddValidProperty": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/shouldAddValidProperty.ts"
      ],
      "SuiteSummaryTypes": [
        "./packages/vest/src/core/suite/produce/summaryGenerators/SuiteSummaryTypes.ts"
      ],
      "collectFailures": [
        "./packages/vest/src/core/suite/produce/summarySelectors/collectFailures.ts"
      ],
      "suiteSelectors": [
        "./packages/vest/src/core/suite/produce/summarySelectors/suiteSelectors.ts"
      ],
      "key": ["./packages/vest/src/core/test/key.ts"],
      "cancelOverriddenPendingTest": [
        "./packages/vest/src/core/test/lib/cancelOverriddenPendingTest.ts"
      ],
      "isSameProfileTest": [
        "./packages/vest/src/core/test/lib/isSameProfileTest.ts"
      ],
      "registerPrevRunTest": [
        "./packages/vest/src/core/test/lib/registerPrevRunTest.ts"
      ],
      "registerTest": ["./packages/vest/src/core/test/lib/registerTest.ts"],
      "removeTestFromState": [
        "./packages/vest/src/core/test/lib/removeTestFromState.ts"
      ],
      "shouldUseErrorAsMessage": [
        "./packages/vest/src/core/test/lib/shouldUseErrorAsMessage.ts"
      ],
      "useTestAtCursor": [
        "./packages/vest/src/core/test/lib/useTestAtCursor.ts"
      ],
      "omitOptionalFields": [
        "./packages/vest/src/core/test/omitOptionalFields.ts"
      ],
      "runAsyncTest": ["./packages/vest/src/core/test/runAsyncTest.ts"],
      "runSyncTest": ["./packages/vest/src/core/test/runSyncTest.ts"],
      "test.memo": ["./packages/vest/src/core/test/test.memo.ts"],
      "test": ["./packages/vest/src/core/test/test.ts"],
      "VestTest": ["./packages/vest/src/core/test/VestTest.ts"],
      "vestBus": ["./packages/vest/src/core/vestBus.ts"],
      "classnames": ["./packages/vest/src/exports/classnames.ts"],
      "enforce@compose": ["./packages/vest/src/exports/enforce@compose.ts"],
      "enforce@compounds": ["./packages/vest/src/exports/enforce@compounds.ts"],
      "enforce@schema": ["./packages/vest/src/exports/enforce@schema.ts"],
      "parser": ["./packages/vest/src/exports/parser.ts"],
      "promisify": ["./packages/vest/src/exports/promisify.ts"],
      "exclusive": ["./packages/vest/src/hooks/exclusive.ts"],
      "hookErrors": ["./packages/vest/src/hooks/hookErrors.ts"],
      "include": ["./packages/vest/src/hooks/include.ts"],
      "mode": ["./packages/vest/src/hooks/mode/mode.ts"],
      "Modes": ["./packages/vest/src/hooks/mode/Modes.ts"],
      "optionalFields": ["./packages/vest/src/hooks/optionalFields.ts"],
      "warn": ["./packages/vest/src/hooks/warn.ts"],
      "vest": ["./packages/vest/src/vest.ts"]
    }
  },
  "files": ["./vx/config/jest/globals.d.ts"],
  "include": ["./packages/*/src/**/*.ts"]
}
